image: node:lts-alpine

variables:
  REGISTRY_USER: $REGISTRY_USER
  IMAGE_NAME: $IMAGE_NAME
  IMAGE_TAG: latest
  CONTAINER_NAME: $CONTAINER_NAME
  GCP_USERNAME: $GCP_USERNAME
  GCP_STATIC_IP: $GCP_STATIC_IP
  SONAR_USER_HOME: '${CI_PROJECT_DIR}/.sonar' # Defines the location of the analysis task cache
  GIT_DEPTH: '0' # Tells git to fetch all the branches of the project, required by the analysis task

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/

stages:
  - build
  - test
  - sonarcloud-check
  - publish
  - deploy

Build:
  stage: build
  before_script:
    - yarn install --frozen-lockfile
  script:
    - yarn build
  artifacts:
    paths:
      - dist/
    expire_in: 1 week

Test:
  stage: test
  before_script:
    - yarn install --frozen-lockfile
  script:
    - yarn test
    - yarn test:cov
  artifacts:
    paths:
      - coverage/
  coverage: '/All files[^|]*\|[^|]*\s+([\d\.]+)/'

Deploy-Staging:
  stage: deploy
  only:
    - staging
  script:
    - npm install --global vercel
    - vercel pull --yes --environment=preview --token=$VERCEL_TOKEN
    - vercel build --token=$VERCEL_TOKEN
    - vercel deploy --prebuilt --token=$VERCEL_TOKEN

Deploy-Production:
  stage: deploy
  only:
    - main
  script:
    - npm install --global vercel
    - vercel pull --yes --environment=production --token=$VERCEL_TOKEN
    - vercel build --prod --token=$VERCEL_TOKEN
    - vercel deploy --prebuilt --prod --token=$VERCEL_TOKEN

sonarcloud-check:
  stage: sonarcloud-check
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: ['']
  cache:
    key: '${CI_JOB_NAME}'
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  dependencies:
    - Test
  only:
    - staging
    - main
  allow_failure: true
